#! /usr/bin/env ruby

require 'woody'
require 'commander/import'


program :name, 'woody'
program :version, Woody::VERSION
program :description, 'Podcast static site generator'

default_command :compile

$dir = "."
global_option '--dir', '--dir path/to/site', "Specifies path to Woody site directory, if not the current directory" do |dir|
  $dir = dir
  puts $dir
end

command :compile do |c|
  c.description = "Compiles the site"
  c.option "--no-add", "Don't ask to add new metadata"
  c.action do |args, options|
    site = Woody.new($dir)
    site.compile(options)
  end
end
alias_command :c, :compile

command :deploy do |c|
  c.description = "Deploys the site"
  c.action do |args, options|
    site = Woody.new($dir)
    site.deploy
  end
end
alias_command :d, :deploy

command :cd do |c|
  c.description = "Compiles then deploys the site"
  c.option "--no-add", "Don't ask to add new metadata"
  c.action do |args, options|
    site = Woody.new($dir)
    site.compile(options)
    site.deploy
  end
end

command :new do |c|
  c.description = "Creates a blank Woody site with some defaults"
  c.syntax = "new [sitename]"
  c.action do |args, options|
    if args[0].nil? or !(args[0].is_a? String)
      puts "Syntax: woody new [sitename]"
      exit!
    end
    Woody::Generator.new_site(args[0])
  end
end

command :'update templates' do |c|
  c.description = "Sets template files to current default. DESTRUCTIVE!"
  c.action do |args, options|
    site = Woody.new($dir)
    site.update_templates
  end
end
alias_command :'templates update', :'update templates'